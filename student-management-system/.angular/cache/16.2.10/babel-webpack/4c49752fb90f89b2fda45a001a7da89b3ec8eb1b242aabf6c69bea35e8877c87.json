{"ast":null,"code":"import { __decorate } from \"tslib\";\nimport { Component } from '@angular/core';\nexport let AppComponent = class AppComponent {\n  constructor(studentService) {\n    this.studentService = studentService;\n    this.title = 'student-management-system';\n    this.showList = false;\n    this.studentData = \"\";\n    this.studentList = [];\n  }\n  ngOnInit() {}\n  showAllStudents() {\n    this.showList = true;\n    this.studentService.getData().subscribe(this.handleStudent);\n  }\n  handleStudent(studentArr) {\n    let studentArray = new Array();\n    if (Array.isArray(studentArr)) {\n      studentArr.forEach(element => {\n        studentArray.push(element);\n      });\n    }\n    this.studentList = studentArray;\n  }\n};\nAppComponent = __decorate([Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.css']\n})], AppComponent);","map":{"version":3,"names":["Component","AppComponent","constructor","studentService","title","showList","studentData","studentList","ngOnInit","showAllStudents","getData","subscribe","handleStudent","studentArr","studentArray","Array","isArray","forEach","element","push","__decorate","selector","templateUrl","styleUrls"],"sources":["C:\\Users\\ibtas\\Desktop\\Assign4front\\student-management-system\\src\\app\\app.component.ts"],"sourcesContent":["import { Component } from '@angular/core';\nimport {StudentServiceService} from './student-service.service'\nimport {Student} from './student'\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.css']\n})\nexport class AppComponent {\n  title = 'student-management-system';\n  showList = false;\n  studentData: any = \"\";\n  studentList: Student[] = [];\n\n  constructor(private studentService: StudentServiceService){\n\n    \n\n  }\n  \n  ngOnInit(){\n    \n  }\n\n  showAllStudents(){\n    this.showList = true;\n    this.studentService.getData().subscribe(this.handleStudent);\n    \n      \n  }\n\n  handleStudent(studentArr: any){\n    let studentArray: Student[] = new Array();\n    if(Array.isArray(studentArr)){\n\n      studentArr.forEach(element => {\n        studentArray.push(element);\n      });\n\n    }\n    this.studentList = studentArray;\n  }\n\n\n\n\n\n}\n"],"mappings":";AAAA,SAASA,SAAS,QAAQ,eAAe;AASlC,WAAMC,YAAY,GAAlB,MAAMA,YAAY;EAMvBC,YAAoBC,cAAqC;IAArC,KAAAA,cAAc,GAAdA,cAAc;IALlC,KAAAC,KAAK,GAAG,2BAA2B;IACnC,KAAAC,QAAQ,GAAG,KAAK;IAChB,KAAAC,WAAW,GAAQ,EAAE;IACrB,KAAAC,WAAW,GAAc,EAAE;EAM3B;EAEAC,QAAQA,CAAA,GAER;EAEAC,eAAeA,CAAA;IACb,IAAI,CAACJ,QAAQ,GAAG,IAAI;IACpB,IAAI,CAACF,cAAc,CAACO,OAAO,EAAE,CAACC,SAAS,CAAC,IAAI,CAACC,aAAa,CAAC;EAG7D;EAEAA,aAAaA,CAACC,UAAe;IAC3B,IAAIC,YAAY,GAAc,IAAIC,KAAK,EAAE;IACzC,IAAGA,KAAK,CAACC,OAAO,CAACH,UAAU,CAAC,EAAC;MAE3BA,UAAU,CAACI,OAAO,CAACC,OAAO,IAAG;QAC3BJ,YAAY,CAACK,IAAI,CAACD,OAAO,CAAC;MAC5B,CAAC,CAAC;;IAGJ,IAAI,CAACX,WAAW,GAAGO,YAAY;EACjC;CAMD;AAvCYb,YAAY,GAAAmB,UAAA,EALxBpB,SAAS,CAAC;EACTqB,QAAQ,EAAE,UAAU;EACpBC,WAAW,EAAE,sBAAsB;EACnCC,SAAS,EAAE,CAAC,qBAAqB;CAClC,CAAC,C,EACWtB,YAAY,CAuCxB"},"metadata":{},"sourceType":"module","externalDependencies":[]}